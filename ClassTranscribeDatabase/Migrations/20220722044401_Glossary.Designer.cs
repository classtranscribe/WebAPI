// <auto-generated />
using System;
using ClassTranscribeDatabase;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

namespace ClassTranscribeDatabase.Migrations
{
    [DbContext(typeof(CTDbContext))]
    [Migration("20220722044401_Glossary")]
    partial class Glossary
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn)
                .HasAnnotation("ProductVersion", "3.1.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            modelBuilder.Entity("ClassTranscribeDatabase.Models.Glossary", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("text");

                    b.Property<string>("ASLSource")
                        .HasColumnType("text");

                    b.Property<string>("ASLVideoLink")
                        .HasColumnType("text");

                    b.Property<string>("CourseId")
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("text");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("text");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<bool>("Editable")
                        .HasColumnType("boolean");

                    b.Property<int>("IsDeletedStatus")
                        .HasColumnType("integer");

                    b.Property<DateTime>("LastUpdatedAt")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("LastUpdatedBy")
                        .HasColumnType("text");

                    b.Property<string>("LicenseTag")
                        .HasColumnType("text");

                    b.Property<string>("Link")
                        .HasColumnType("text");

                    b.Property<string>("OfferingId")
                        .HasColumnType("text");

                    b.Property<bool>("Shared")
                        .HasColumnType("boolean");

                    b.Property<string>("Source")
                        .HasColumnType("text");

                    b.Property<string>("Term")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("CourseId", "OfferingId");

                    b.ToTable("Glossaries");
                });

            modelBuilder.Entity("ClassTranscribeDatabase.Models.Glossary", b =>
                {
                    b.HasOne("ClassTranscribeDatabase.Models.CourseOffering", "CourseOffering")
                        .WithMany("Glossaries")
                        .HasForeignKey("CourseId", "OfferingId");
                });
#pragma warning restore 612, 618
        }
    }
}
