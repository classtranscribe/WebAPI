// <auto-generated />
using System;
using ClassTranscribeDatabase;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

namespace ClassTranscribeDatabase.Migrations
{
    [DbContext(typeof(CTDbContext))]
    [Migration("20220901042623_AddGlossaryToVideo")]
    partial class AddGlossaryToVideo
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn)
                .HasAnnotation("ProductVersion", "3.1.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            modelBuilder.Entity("ClassTranscribeDatabase.Models.Video", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("text");

                    b.Property<string>("AudioId")
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("text");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("text");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<TimeSpan?>("Duration")
                        .HasColumnType("interval");

                    b.Property<string>("FileMediaInfo")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Glossary")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("IsDeletedStatus")
                        .HasColumnType("integer");

                    b.Property<string>("JsonMetadata")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("LastUpdatedAt")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("LastUpdatedBy")
                        .HasColumnType("text");

                    b.Property<string>("PhraseHints")
                        .HasColumnType("text");

                    b.Property<string>("ProcessedVideo1Id")
                        .HasColumnType("text");

                    b.Property<string>("ProcessedVideo2Id")
                        .HasColumnType("text");

                    b.Property<string>("SceneData")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("TranscribingAttempts")
                        .HasColumnType("integer");

                    b.Property<string>("TranscriptionStatus")
                        .HasColumnType("text");

                    b.Property<string>("Video1Id")
                        .HasColumnType("text");

                    b.Property<string>("Video2Id")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("AudioId");

                    b.HasIndex("ProcessedVideo1Id");

                    b.HasIndex("ProcessedVideo2Id");

                    b.HasIndex("Video1Id");

                    b.HasIndex("Video2Id");

                    b.ToTable("Videos");
                });

            modelBuilder.Entity("ClassTranscribeDatabase.Models.Video", b =>
                {
                    b.HasOne("ClassTranscribeDatabase.Models.FileRecord", "Audio")
                        .WithMany()
                        .HasForeignKey("AudioId");

                    b.HasOne("ClassTranscribeDatabase.Models.FileRecord", "ProcessedVideo1")
                        .WithMany()
                        .HasForeignKey("ProcessedVideo1Id");

                    b.HasOne("ClassTranscribeDatabase.Models.FileRecord", "ProcessedVideo2")
                        .WithMany()
                        .HasForeignKey("ProcessedVideo2Id");

                    b.HasOne("ClassTranscribeDatabase.Models.FileRecord", "Video1")
                        .WithMany()
                        .HasForeignKey("Video1Id");

                    b.HasOne("ClassTranscribeDatabase.Models.FileRecord", "Video2")
                        .WithMany()
                        .HasForeignKey("Video2Id");
                });
#pragma warning restore 612, 618
        }
    }
}
